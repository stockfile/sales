service: sf-sales

custom:
  tableName: sf-${self:provider.stage}-sales
  storeIndexName: storeIndex
  tableArn:
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${self:custom.tableName}
  storeIndexArn:
    Fn::Join:
    - "/"
    - - ${self:custom.tableArn}
      - index
      - ${self:custom.storeIndexName}
  jwtAuthorizer:
    type: CUSTOM
    authorizerId:
      Fn::ImportValue: ${self:provider.stage}-JwtAuthorizer
  dev:
    region: "ap-southeast-2" # Sydney
  staging:
    region: "ap-southeast-1" # Singapore
  prod:
    region: "ap-southeast-1" # Singapore

provider:
  name: aws
  region: ${self:custom.${self:provider.stage}.region}
  runtime: go1.x
  memorySize: 192
  stage: ${opt:stage, 'dev'}
  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:provider.stage}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:provider.stage}-ApiGatewayRestApiRootResourceId
  environment:
    TABLE_NAME: ${self:custom.tableName}
    STORE_INDEX_NAME: ${self:custom.storeIndexName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - ${self:custom.tableArn}
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource:
        - ${self:custom.storeIndexArn}

package:
  include:
  - ./bin/**
  exclude:
  - ./**

functions:
  CreateSale:
    handler: bin/handlers/CreateSale
    events:
      - http:
          path: /sales
          method: post
          authorizer: ${self:custom.jwtAuthorizer}

  ListSales:
    handler: bin/handlers/ListSales
    events:
      - http:
          path: /sales
          method: get
          authorizer: ${self:custom.jwtAuthorizer}

resources:
  Resources:
    SalesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: store_id
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.storeIndexName}
            KeySchema:
              - AttributeName: store_id
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
